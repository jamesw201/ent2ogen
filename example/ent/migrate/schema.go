// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CitiesColumns holds the columns for the "cities" table.
	CitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
	}
	// CitiesTable holds the schema information for the "cities" table.
	CitiesTable = &schema.Table{
		Name:       "cities",
		Columns:    CitiesColumns,
		PrimaryKey: []*schema.Column{CitiesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "user_name", Type: field.TypeString, Unique: true},
		{Name: "optional_nullable_bool", Type: field.TypeBool, Nullable: true},
		{Name: "user_city", Type: field.TypeUUID},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_cities_city",
				Columns:    []*schema.Column{UsersColumns[7]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserFriendListColumns holds the columns for the "user_friend_list" table.
	UserFriendListColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "friend_list_id", Type: field.TypeUUID},
	}
	// UserFriendListTable holds the schema information for the "user_friend_list" table.
	UserFriendListTable = &schema.Table{
		Name:       "user_friend_list",
		Columns:    UserFriendListColumns,
		PrimaryKey: []*schema.Column{UserFriendListColumns[0], UserFriendListColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_friend_list_user_id",
				Columns:    []*schema.Column{UserFriendListColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_friend_list_friend_list_id",
				Columns:    []*schema.Column{UserFriendListColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CitiesTable,
		UsersTable,
		UserFriendListTable,
	}
)

func init() {
	UsersTable.ForeignKeys[0].RefTable = CitiesTable
	UserFriendListTable.ForeignKeys[0].RefTable = UsersTable
	UserFriendListTable.ForeignKeys[1].RefTable = UsersTable
}
