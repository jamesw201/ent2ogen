// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SchemaAsColumns holds the columns for the "schema_as" table.
	SchemaAsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "int64", Type: field.TypeInt64},
		{Name: "string_bindto_foobar", Type: field.TypeString},
		{Name: "string_optional_nullable", Type: field.TypeString, Nullable: true},
		{Name: "optional_nullable_bool", Type: field.TypeBool, Nullable: true},
		{Name: "jsontype_strings", Type: field.TypeJSON},
		{Name: "jsontype_strings_optional", Type: field.TypeJSON, Nullable: true},
		{Name: "required_enum", Type: field.TypeEnum, Enums: []string{"a", "b"}},
		{Name: "optional_nullable_enum", Type: field.TypeEnum, Nullable: true, Enums: []string{"c", "d"}},
		{Name: "schemaa_edge_schemab_unique_required", Type: field.TypeInt64},
		{Name: "schemaa_edge_schemab_unique_required_bindto_bs", Type: field.TypeInt64},
		{Name: "schemaa_edge_schemab_unique_optional", Type: field.TypeInt64, Nullable: true},
	}
	// SchemaAsTable holds the schema information for the "schema_as" table.
	SchemaAsTable = &schema.Table{
		Name:       "schema_as",
		Columns:    SchemaAsColumns,
		PrimaryKey: []*schema.Column{SchemaAsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "schema_as_schema_bs_edge_schemab_unique_required",
				Columns:    []*schema.Column{SchemaAsColumns[9]},
				RefColumns: []*schema.Column{SchemaBsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "schema_as_schema_bs_edge_schemab_unique_required_bindto_bs",
				Columns:    []*schema.Column{SchemaAsColumns[10]},
				RefColumns: []*schema.Column{SchemaBsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "schema_as_schema_bs_edge_schemab_unique_optional",
				Columns:    []*schema.Column{SchemaAsColumns[11]},
				RefColumns: []*schema.Column{SchemaBsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SchemaBsColumns holds the columns for the "schema_bs" table.
	SchemaBsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "schemaa_edge_schemab", Type: field.TypeInt, Nullable: true},
	}
	// SchemaBsTable holds the schema information for the "schema_bs" table.
	SchemaBsTable = &schema.Table{
		Name:       "schema_bs",
		Columns:    SchemaBsColumns,
		PrimaryKey: []*schema.Column{SchemaBsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "schema_bs_schema_as_edge_schemab",
				Columns:    []*schema.Column{SchemaBsColumns[1]},
				RefColumns: []*schema.Column{SchemaAsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SchemaAsTable,
		SchemaBsTable,
	}
)

func init() {
	SchemaAsTable.ForeignKeys[0].RefTable = SchemaBsTable
	SchemaAsTable.ForeignKeys[1].RefTable = SchemaBsTable
	SchemaAsTable.ForeignKeys[2].RefTable = SchemaBsTable
	SchemaBsTable.ForeignKeys[0].RefTable = SchemaAsTable
}
