// Code generated by ent, DO NOT EDIT.

package switchmodel

import (
	"fmt"
)

const (
	// Label holds the string label denoting the switchmodel type in the database.
	Label = "switch_model"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSwitchType holds the string denoting the switch_type field in the database.
	FieldSwitchType = "switch_type"
	// Table holds the table name of the switchmodel in the database.
	Table = "switch_models"
)

// Columns holds all SQL columns for switchmodel fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldSwitchType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

// SwitchType defines the type for the "switch_type" enum field.
type SwitchType string

// SwitchType values.
const (
	SwitchTypeMechanical        SwitchType = "mechanical"
	SwitchTypeOptical           SwitchType = "optical"
	SwitchTypeElectrocapacitive SwitchType = "electrocapacitive"
)

func (st SwitchType) String() string {
	return string(st)
}

// SwitchTypeValidator is a validator for the "switch_type" field enum values. It is called by the builders before save.
func SwitchTypeValidator(st SwitchType) error {
	switch st {
	case SwitchTypeMechanical, SwitchTypeOptical, SwitchTypeElectrocapacitive:
		return nil
	default:
		return fmt.Errorf("switchmodel: invalid enum value for switch_type field: %q", st)
	}
}
